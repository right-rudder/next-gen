---
interface BreadcrumbItem {
  name: string;
  href?: string;
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<nav class="bg-gray-50 py-3" aria-label="Breadcrumb">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <ol class="flex items-center space-x-2 text-sm">
      {
        items.map((item, index) => (
          <li class="flex items-center">
            {index > 0 && (
              <svg
                class="flex-shrink-0 h-4 w-4 text-gray-400 mx-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                  clip-rule="evenodd"
                />
              </svg>
            )}
            {item.href ? (
              <a
                href={item.href}
                class="text-gray-500 hover:text-gray-700 transition-colors"
              >
                {item.name}
              </a>
            ) : (
              <span class="text-gray-900 font-medium" aria-current="page">{item.name}</span>
            )}
          </li>
        ))
      }
    </ol>
  </div>
</nav>

<!-- Breadcrumb Schema.org Structured Data -->
<script
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: items.map((item, index) => ({
      "@type": "ListItem",
      position: index + 1,
      name: item.name,
      ...(item.href && { item: `https://flyhere.aero${item.href}` }),
    })),
  })}
/>
