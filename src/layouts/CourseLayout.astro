---
const { data } = Astro.props;
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import CourseInfo from "../components/CourseInfo";
import CourseCard from "../components/CourseCard.astro";
import { courses } from "../data/coursesData";
import EmailCTA from "../components/EmailCTA.astro";
import GetInContact from "../components/GetInContact.astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif,webp}",
);
const TRAINING_COURSE_FORM_WEBHOOK_URL = import.meta.env
  .TRAINING_COURSE_FORM_WEBHOOK_URL;
---

<section class="py-12 px-5">
  <div class="max-w-7xl mx-auto text-dark-blue">
    <div
      class="flex justify-between flex-col lg:flex-row gap-10 py-10 items-center"
    >
      <h2 class="font-bold text-3xl">{data.date}</h2>
      <a href="#sign-up-form" class="btn-dark-blue w-full lg:w-fit">
        Start Today
      </a>
    </div>
    <div class="py-5 flex flex-col gap-3">
      {data.intro.map((intro) => <p class="paragraph" set:html={intro} />)}
    </div>
    <div class="">
      <Image
        src={images[data.primaryImage]()}
        alt={data.primaryAlt}
        class="object-cover object-top max-h-[36rem] lg:max-h-[48rem] w-full"
      />
      <div class="">
        <span class="paragraph italic text-sm">{data.caption}</span>
      </div>
    </div>
    <div class="py-5 flex flex-col gap-3">
      {
        data.content.map((paragraph) => (
          <p class="paragraph" set:html={paragraph} />
        ))
      }
    </div>
  </div>
</section>

<hr class="border-t max-w-7xl mx-auto border-gray-300" />

<!-- two button section -->
<section class="py-12 px-5">
  <div class="max-w-xl lg:max-w-7xl mx-auto text-dark-blue">
    <h2 class="font-extrabold text-5xl">Course Additional Info</h2>
    <div class="flex flex-col lg:flex-row gap-10 mt-10">
      <div class="lg:flex-1 flex flex-col">
        <CourseInfo data={data} client:visible />
      </div>
      <div class="lg:flex-1">
        <Image
          src={images[data.secondaryImage]()}
          alt={data.secondaryAlt}
          class="object-cover max-h-[36rem]"
        />
        <div class="">
          <span class="paragraph italic text-sm">{data.secondaryCaption}</span>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Links to other courses -->
<!-- <section class="py-16 px-5 bg-dark-blue">
  <div class="max-w-xl lg:max-w-7xl mx-auto text-dark-blue">
    <h2 class="font-extrabold text-5xl text-white">Future Pathways</h2>
    <div class="flex flex-col lg:flex-row gap-10 mt-10">
      {courses.map((course) => <CourseCard course={course} />)}
    </div>
  </div>
</section> -->
<GetInContact />

<section class="py-12 px-5 scroll-my-24" id="sign-up-form">
  <div class="max-w-xl lg:max-w-7xl mx-auto text-dark-blue">
    <div class="flex flex-col lg:flex-row gap-10 mt-10">
      <div class="lg:flex-1 flex flex-col gap-10">
        <h2 class="font-extrabold text-5xl">Take the first step...</h2>
        <p class="paragraph">
          Start your training today at Alto Flight Academy and take the first
          step. Start training today with our <span class="lowercase"
            >{data.hiddenField}</span
          > course.
        </p>
        <p class="paragraph">
          Fill out the form and we'll contact you to schedule a visit to our
          flight school. You'll get the chance to see Alto Flight Academy first
          hand and meet with one of our certified flight instructors.
        </p>
      </div>
      <div class="lg:flex-1">
        <form
          id="training-course-form"
          class="flex flex-col max-w-4xl mx-auto gap-5 my-5"
        >
          <div class="flex flex-col lg:flex-row gap-5">
            <input
              type="text"
              name="first-name"
              placeholder="Your first name"
              class="px-5 py-4 outline-1 w-full border-gray-400 border outline-gray-500 rounded-full"
              required
            />
            <input
              type="text"
              name="last-name"
              placeholder="Your last name"
              class="px-5 py-4 outline-1 w-full border-gray-400 border outline-gray-500 rounded-full"
              required
            />
          </div>
          <div class="flex flex-col lg:flex-row gap-5">
            <input
              id="email"
              type="email"
              name="email"
              placeholder="Your email"
              class="px-5 py-4 outline-1 w-full border-gray-400 border outline-gray-500 rounded-full"
              required
            />
            <input
              type="email"
              name="confirm-email"
              placeholder="Confirm email"
              class="hidden px-5 py-4 outline-1 w-full border-gray-400 border outline-gray-500 rounded-full"
            />
            <input
              type="tel"
              name="phone"
              placeholder="Your phone number"
              class="px-5 py-4 outline-1 w-full border-gray-400 border outline-gray-500 rounded-full"
              required
            />
          </div>

          <input
            id="interested-in"
            name="interested-in"
            type="text"
            value={data.hiddenField}
            class="hidden px-5 py-4 outline-1 w-full border-gray-400 border outline-gray-500 rounded-full"
            required
          />

          <textarea
            id="more-info"
            name="more-info"
            placeholder="How far along are you in your training?"
            class="px-5 py-4 outline-1 border-gray-400 border outline-gray-500 rounded-xl min-h-24"
          ></textarea>

          <div class="flex gap-3">
            <input
              type="checkbox"
              name="agree-data-collection"
              id="agree-data-collection"
            />

            <label
              for="agree-data-collection"
              class="text-gray-500 text-sm lg:text-base"
            >
              I agree to the terms & conditions provided by the company. By
              providing my phone number, I agree to receive text messages from
              Alto Flight Academy.
            </label>
          </div>
          <button
            id="submit-button"
            disabled
            type="submit"
            class="btn-dark-blue mx-auto cursor-not-allowed bg-gray-400 hover:bg-gray-400"
            >Sign up now</button
          >
        </form>
      </div>
    </div>
  </div>
</section>

<EmailCTA />

<script define:vars={{ TRAINING_COURSE_FORM_WEBHOOK_URL }}>
  const checkbox = document.getElementById("agree-data-collection");
  const submitButton = document.getElementById("submit-button");

  checkbox.addEventListener("change", function () {
    if (checkbox.checked) {
      submitButton.disabled = false;
      submitButton.classList.remove(
        "cursor-not-allowed",
        "bg-gray-400",
        "hover:bg-gray-400",
      );
    } else {
      submitButton.disabled = true;
      submitButton.classList.add(
        "cursor-not-allowed",
        "bg-gray-400",
        "hover:bg-gray-400",
      );
    }
  });

  // Wait for the DOM content to be fully loaded
  document.addEventListener("DOMContentLoaded", function () {
    // Get the contactUs form element
    const trainingCourseForm = document.getElementById("training-course-form");

    // Check if the contactUs form element exists
    if (trainingCourseForm !== null) {
      // Add submit event listener to the contactUs form
      trainingCourseForm.addEventListener("submit", function (event) {
        // Prevent the default form submission
        event.preventDefault();

        // Serialize the form data
        const formData = new FormData(trainingCourseForm);

        // Check the value of the honeypot field
        const confirmEmailValue = formData.get("confirm-email");
        if (confirmEmailValue === "" || confirmEmailValue === null) {
          // If the honeypot field is empty, it's a human
          // Set the form action to the URL for processing the form and redirecting to thank you
          trainingCourseForm.action = TRAINING_COURSE_FORM_WEBHOOK_URL;
        }

        // Convert FormData to URLSearchParams
        const urlSearchParams = new URLSearchParams();
        for (const pair of formData.entries()) {
          urlSearchParams.append(pair[0], pair[1]);
        }

        // Send an AJAX request to submit the form
        const xhr = new XMLHttpRequest();
        xhr.open("POST", trainingCourseForm.action);
        xhr.setRequestHeader(
          "Content-Type",
          "application/x-www-form-urlencoded",
        );
        xhr.onload = function () {
          // Check if the request was successful (status 200)
          if (xhr.status === 200) {
            // Redirect the user after a successful form submission
            window.location.href = "/training-course-confirmation";
          } else {
            // Handle errors if any
            console.error("Form submission failed:", xhr.statusText);
          }
        };
        xhr.onerror = function () {
          // Handle network errors
          console.error("Network error occurred while submitting the form.");
        };
        xhr.send(urlSearchParams);
      });
    } else {
      console.error("Training course form element not found.");
    }
  });
</script>

<script src="../scripts/emailValidation.js"></script>
